{"version":3,"sources":["PokemonDetails.jsx","PokemonList.jsx","PokemonSearch.js","reportWebVitals.js","Register.jsx","PokemonTracker.jsx","Logout.jsx","index.js"],"names":["pokemonName","useParams","useState","pokemon","setPokemon","useEffect","axios","get","then","response","data","error","console","log","pokemonComponent","name","health","PokemonSearchBar","allPokemon","setAllPokemon","catch","pokemonListComponent","map","to","App","formInput","setFormInput","errorMsg","setError","type","value","onChange","e","target","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","props","navigate","useNavigate","password","username","userData","setUserData","loggedInName","setLoggedInName","post","PokemonTracker","pokemonForm","setPokemonForm","myPokemon","setMyPokemon","getMyPokemon","pokemonElement","push","Logout","ReactDOM","render","path","element","Register","PokemonSearch","PokemonDetails","document","getElementById"],"mappings":"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","file":"static/js/main.749acec7.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\n\nexport default function() {\n    const pokemonName = useParams().pokemonName;\n\n    function findPokemonDetails() {\n\n        axios.get('http://localhost:8000/api/pokemon/find/' + pokemonName)\n            .then(response => setPokemon(response.data))\n            .then(error => console.log(\"Could not find Pokemon\"));\n\n    }\n\n\n    const [pokemon, setPokemon] = useState(null);\n    useEffect(findPokemonDetails, []);\n\n\n    const pokemonComponent = pokemon ? \n        (<><div>\n            Pokemon Name: {pokemon.name}\n        </div>\n        <div>\n            Pokemon Health: {pokemon.health} \n        </div></>) :\n        (<div> No Pokemon found </div>);\n\n    return (\n        <div>\n            {pokemonComponent}\n        </div>\n    )\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function PokemonSearchBar() {\n    const [allPokemon, setAllPokemon] = useState([]);\n\n\n    function findAllPokemon() {\n        axios.get('api/pokemon/findAll')\n            .then(response => {\n                setAllPokemon(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    useEffect(findAllPokemon, []);\n\n    const pokemonListComponent = allPokemon.map(pokemon => {\n        return (<>\n        <p></p>\n        <Link to={\"pokemon/\" + pokemon.name}>{pokemon.name}</Link>\n        </>)\n    })\n\n    return (\n        <div>\n            <h1>These are all my Pokemon</h1>\n            {pokemonListComponent}\n        </div>\n    )\n}","import { useState } from 'react';\nimport axios, { Axios } from 'axios';\n\nfunction App() {\n  const [formInput, setFormInput] = useState('');\n  const [pokemon, setPokemon] = useState({\n    name: 'No pokemon selected', health: -1,\n  })\n  const [errorMsg, setError] = useState(null);\n\n  function onSearchButtonClick() {\n    // const pokemon = axios.get('...')\n    // console.log(pokemon);\n    \n    if (!formInput) {\n      setError(\"You must type in a Pokemon name.\");\n      return;\n    }\n\n    axios.get('/api/pokemon/find/' + formInput)\n      .then(response => setPokemon(response.data))\n      .catch(error => setPokemon({\n        name: \"No pokemon found\",\n        health: null, \n      }));\n    console.log(\"hello, there\");\n\n    // doSomething();\n  }\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Pokemon\n      </button>\n      <div>\n        Pokemon Name: {pokemon.name}\n      </div>\n      <div>\n        Pokemon Health: {pokemon.health}\n      </div>\n\n    </div>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useNavigate } from 'react-router';\n\n\nexport default (props) => {\n\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState({\n        password: '',\n        username: '',\n    })\n\n    const [loggedInName, setLoggedInName] = useState('');\n\n    return (\n        <div>\n            <h3>Input Name and Password</h3>\n            <h5>Username:</h5>\n            <input value={userData.username} onChange={(e) => {\n                const username = e.target.value;\n                setUserData({\n                    ...userData,\n                    username: username\n                })\n            }}/>\n            <h5>Password:</h5>\n            <input value={userData.password} onChange={(e) => {\n                const password = e.target.value;\n                setUserData({\n                    ...userData,\n                    password: password\n                })\n            }} type='password' />\n            <button\n                onClick={() => {\n                    axios.post('/api/users', userData)\n                        .then(response => {\n                            navigate(\"/myPokemon\")\n                            console.log(response)\n                        })\n                        .catch(error => console.log(error));\n                }}\n            >Register New User</button>\n            <button\n                onClick={\n                    () => {\n                        axios.get('/api/users/whoIsLoggedIn')\n                            .then(response => setLoggedInName(response.data))\n                            .catch(error => console.log(error));\n                    }\n                }\n                >Who is logged in?</button>\n            {loggedInName && <div>{loggedInName}</div>}\n        </div>\n    );\n\n\n} ","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    \n\n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error))\n\n    }\n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\n\n\nexport default function Logout(props) {\n    const navigate = useNavigate();\n    return (<button onClick={() => axios.post('/api/users/logout')\n    .then(() => navigate('/'))\n    .catch(console.error)\n  }>Logout</button>);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonList from './PokemonList';\nimport PokemonSearch from './PokemonSearch';\nimport reportWebVitals from './reportWebVitals';\nimport Register from './Register';\nimport PokemonTracker from './PokemonTracker';\nimport Logout from './Logout';\n\nReactDOM.render(\n  <Router>\n    <Logout />\n    <Routes>\n      <Route path=\"/\" element={<Register />} />\n      <Route path=\"/myPokemon\" element={<PokemonTracker />} />\n      <Route path=\"/list\" element={<PokemonList />} />\n      <Route path=\"/pokemonSearch/:searchQuery\" element={<PokemonSearch />} />\n      <Route path=\"/pokemon/:pokemonName\" element={<PokemonDetails />} />\n    </Routes>\n  </Router>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}